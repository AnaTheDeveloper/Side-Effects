{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minnie\\\\VSCode Workspace\\\\hooks-project\\\\side-effects-reducers-contextapi-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input'; //This function can be created outside of the scope of this component function because it does not need to interact with anything or handle any data.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  const authctx = useContext(AuthContext); // useEffect(() => {\n  //   console.log('Effect running');\n  // }, []);\n  //this effect function runs after every component render cycle.\n  //once we add an empty array. Now this function here, only executes for the first time this component was mounted and \n  //rendered, but not thereafter, not for any subsequent rerender cycle.\n  //Alternatively, we add a dependency like entered email or entered password. Now this function here, reruns whenever the component was re-evaluated\n  //and this state, in this case here, changed.\n  //Here we are using object destructuring to pull properties of objects. For exmaple, from emailState we can extract isValid and store it\n  //in a new constant of the same name.\n\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('checking form validity');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500); //whenever this useEffect function runs, before it runs, except for the very first time when it runs, this cleanup function will run.\n    //So the cleanup function runs before every new side effect function execution and before the component is removed.\n\n    return () => {\n      console.log('Cleaned Up');\n      clearTimeout(identifier);\n    }; //If we want to be sending an HTTP request here, we would have now only sent once instead of a dozen HTTP requests. And that's an improvement.\n  }, [emailIsValid, passwordIsValid]); // Now we are passing specific properties instead of the entire object as a dependency.\n  //There is a simple rule as to what you put in the [], you add as dependencies, what you're using in your side effect function.\n  //After every login component function execution, it will rerun this useEffect function but only if either setFormIsValid,\n  //or enteredEmail or enteredPassword,changed in the last component rerender cycle.\n  //So that's another scenario where useEffect shines. It helps us make sure that we have one code, in one place, instead of as before in multiple places\n  //which reruns, whenever one of the dependencies changed. So it's not just for when a component was created for the first time,but it's equally \n  //common to use it to rerun logic when certain data, typically some state or some props changed.\n  //useEffect in general, is a super important hook that helps you deal with code that should be executed in response to something. And something could \n  //be the component being loaded. \n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   emailState.isValid && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authctx.onLogin(emailState.value, passwordState.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        label: \"E-Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"ZU7CdDMeqT0fNB/4Fl8IucPaWtQ=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","AuthContext","Input","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","authctx","emailIsValid","passwordIsValid","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","actions","btn"],"sources":["C:/Users/Minnie/VSCode Workspace/hooks-project/side-effects-reducers-contextapi-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../../store/auth-context';\nimport Input from '../UI/Input';\n\n//This function can be created outside of the scope of this component function because it does not need to interact with anything or handle any data.\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.includes('@') };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.includes('@') };\n  }\n  return { value: '', isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: '', isValid: false };\n}\n\nconst Login = (props) => {\n\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null,\n  });\n\n  const authctx = useContext(AuthContext);\n\n  // useEffect(() => {\n  //   console.log('Effect running');\n  // }, []);\n  //this effect function runs after every component render cycle.\n  //once we add an empty array. Now this function here, only executes for the first time this component was mounted and \n  //rendered, but not thereafter, not for any subsequent rerender cycle.\n  //Alternatively, we add a dependency like entered email or entered password. Now this function here, reruns whenever the component was re-evaluated\n  //and this state, in this case here, changed.\n\n  //Here we are using object destructuring to pull properties of objects. For exmaple, from emailState we can extract isValid and store it\n  //in a new constant of the same name.\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('checking form validity');\n      setFormIsValid(\n      emailIsValid && passwordIsValid\n    );\n    }, 500);\n    //whenever this useEffect function runs, before it runs, except for the very first time when it runs, this cleanup function will run.\n    //So the cleanup function runs before every new side effect function execution and before the component is removed.\n    return () => {\n      console.log('Cleaned Up');\n      clearTimeout(identifier);\n    };\n\n    //If we want to be sending an HTTP request here, we would have now only sent once instead of a dozen HTTP requests. And that's an improvement.\n    \n  }, [emailIsValid, passwordIsValid]); // Now we are passing specific properties instead of the entire object as a dependency.\n  //There is a simple rule as to what you put in the [], you add as dependencies, what you're using in your side effect function.\n  //After every login component function execution, it will rerun this useEffect function but only if either setFormIsValid,\n  //or enteredEmail or enteredPassword,changed in the last component rerender cycle.\n\n  //So that's another scenario where useEffect shines. It helps us make sure that we have one code, in one place, instead of as before in multiple places\n  //which reruns, whenever one of the dependencies changed. So it's not just for when a component was created for the first time,but it's equally \n  //common to use it to rerun logic when certain data, typically some state or some props changed.\n\n  //useEffect in general, is a super important hook that helps you deal with code that should be executed in response to something. And something could \n  //be the component being loaded. \n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n\n    // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type: 'USER_INPUT', val: event.target.value})\n\n    // setFormIsValid(\n    //   emailState.isValid && event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type: 'INPUT_BLUR'});\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({type: 'INPUT_BLUR'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) {\n          authctx.onLogin(emailState.value, passwordState.value);\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input \n        id=\"email\" \n        label=\"E-Mail\" \n        type=\"email\" \n        isValid={emailIsValid} \n        value={emailState.value}\n        onChange={emailChangeHandler}\n        onBlur={validateEmailHandler}\n        />\n        <Input \n        id=\"password\" \n        label=\"E-Password\" \n        type=\"password\" \n        isValid={passwordIsValid} \n        value={passwordState.value}\n        onChange={passwordChangeHandler}\n        onBlur={validatePasswordHandler}\n        />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}