{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minnie\\\\VSCode Workspace\\\\hooks-project\\\\side-effects-reducers-contextapi-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button'; //This function can be created outside of the scope of this component function because it does not need to interact with anything or handle any data.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n  useEffect(() => {\n    console.log('Effect running');\n  }, []); //this effect function runs after every component render cycle.\n  //once we add an empty array. Now this function here, only executes for the first time this component was mounted and \n  //rendered, but not thereafter, not for any subsequent rerender cycle.\n  //Alternatively, we add a dependency like entered email or entered password. Now this function here, reruns whenever the component was re-evaluated\n  //and this state, in this case here, changed.\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('checking form validity');\n  //     setFormIsValid(\n  //     enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //   );\n  //   }, 500);\n  //   //whenever this useEffect function runs, before it runs, except for the very first time when it runs, this cleanup function will run.\n  //   //So the cleanup function runs before every new side effect function execution and before the component is removed.\n  //   return () => {\n  //     console.log('Cleaned Up');\n  //     clearTimeout(identifier);\n  //   };\n  //   //If we want to be sending an HTTP request here, we would have now only sent once instead of a dozen HTTP requests. And that's an improvement.\n  // }, [enteredEmail, enteredPassword]);\n  //There is a simple rule as to what you put in the [], you add as dependencies, what you're using in your side effect function.\n  //After every login component function execution, it will rerun this useEffect function but only if either setFormIsValid,\n  //or enteredEmail or enteredPassword,changed in the last component rerender cycle.\n  //So that's another scenario where useEffect shines. It helps us make sure that we have one code, in one place, instead of as before in multiple places\n  //which reruns, whenever one of the dependencies changed. So it's not just for when a component was created for the first time,but it's equally \n  //common to use it to rerun logic when certain data, typically some state or some props changed.\n  //useEffect in general, is a super important hook that helps you deal with code that should be executed in response to something. And something could \n  //be the component being loaded. \n\n  const emailChangeHandler = event => {\n    dispatchEmail();\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(emailState.isValid && event.target.value.trim().length() > 6);\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(emailState.isValid);\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"17i5I9hXnte/xl6k5de/Z6iQjpU=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","value","isValid","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","console","log","emailChangeHandler","event","passwordChangeHandler","target","trim","length","validateEmailHandler","setEmailIsValid","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["C:/Users/Minnie/VSCode Workspace/hooks-project/side-effects-reducers-contextapi-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\n//This function can be created outside of the scope of this component function because it does not need to interact with anything or handle any data.\nconst emailReducer = (state, action) => {\n  return {value: '', isValid: false}\n};\n\nconst Login = (props) => {\n\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {value: '', isValid: false});\n\n  useEffect(() => {\n    console.log('Effect running');\n  }, []);\n  //this effect function runs after every component render cycle.\n  //once we add an empty array. Now this function here, only executes for the first time this component was mounted and \n  //rendered, but not thereafter, not for any subsequent rerender cycle.\n  //Alternatively, we add a dependency like entered email or entered password. Now this function here, reruns whenever the component was re-evaluated\n  //and this state, in this case here, changed.\n\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log('checking form validity');\n  //     setFormIsValid(\n  //     enteredEmail.includes('@') && enteredPassword.trim().length > 6\n  //   );\n  //   }, 500);\n  //   //whenever this useEffect function runs, before it runs, except for the very first time when it runs, this cleanup function will run.\n  //   //So the cleanup function runs before every new side effect function execution and before the component is removed.\n  //   return () => {\n  //     console.log('Cleaned Up');\n  //     clearTimeout(identifier);\n  //   };\n\n  //   //If we want to be sending an HTTP request here, we would have now only sent once instead of a dozen HTTP requests. And that's an improvement.\n    \n  // }, [enteredEmail, enteredPassword]);\n  //There is a simple rule as to what you put in the [], you add as dependencies, what you're using in your side effect function.\n  //After every login component function execution, it will rerun this useEffect function but only if either setFormIsValid,\n  //or enteredEmail or enteredPassword,changed in the last component rerender cycle.\n\n  //So that's another scenario where useEffect shines. It helps us make sure that we have one code, in one place, instead of as before in multiple places\n  //which reruns, whenever one of the dependencies changed. So it's not just for when a component was created for the first time,but it's equally \n  //common to use it to rerun logic when certain data, typically some state or some props changed.\n\n  //useEffect in general, is a super important hook that helps you deal with code that should be executed in response to something. And something could \n  //be the component being loaded. \n\n  const emailChangeHandler = (event) => {\n    dispatchEmail();\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid (\n      emailState.isValid && event.target.value.trim().length() > 6\n    )\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(emailState.isValid);\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}