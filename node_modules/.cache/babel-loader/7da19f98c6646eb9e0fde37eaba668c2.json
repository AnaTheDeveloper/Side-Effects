{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minnie\\\\VSCode Workspace\\\\hooks-project\\\\side-effects-reducers-contextapi-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false); //After every component evaluation then this will run.\n\n  useEffect(() => {\n    const storedUserLoggedInInfo = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInfo === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []); //Will only run once because the dependencies in the [] will never change as no dependencies have been declared.\n  ///Once weve logged in even if we refresh it stays logged in.\n\n  const loginHandler = (email, password) => {\n    //Sotre data in local storeage in brower.\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: isLoggedIn\n      },\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n        isAuthenticated: isLoggedIn,\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","storedUserLoggedInInfo","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem"],"sources":["C:/Users/Minnie/VSCode Workspace/hooks-project/side-effects-reducers-contextapi-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //After every component evaluation then this will run.\n  useEffect(() => {\n    const storedUserLoggedInInfo = localStorage.getItem('isLoggedIn');\n\n  if (storedUserLoggedInInfo === '1') {\n    setIsLoggedIn(true);\n  }\n  }, []);\n  //Will only run once because the dependencies in the [] will never change as no dependencies have been declared.\n  ///Once weve logged in even if we refresh it stays logged in.\n\n  const loginHandler = (email, password) => {\n    //Sotre data in local storeage in brower.\n    localStorage.setItem('isLoggedIn', '1')\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      {/* Providing the React Context */}\n      <AuthContext.Provider \n      value={{\n        isLoggedIn: isLoggedIn,\n      }}\n      >\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n      </AuthContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C,CAFa,CAIb;;EACAC,SAAS,CAAC,MAAM;IACd,MAAMQ,sBAAsB,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAA/B;;IAEF,IAAIF,sBAAsB,KAAK,GAA/B,EAAoC;MAClCD,aAAa,CAAC,IAAD,CAAb;IACD;EACA,CANQ,EAMN,EANM,CAAT,CALa,CAYb;EACA;;EAEA,MAAMI,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;IACxC;IACAJ,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;IACAP,aAAa,CAAC,IAAD,CAAb;EACD,CAJD;;EAMA,MAAMQ,aAAa,GAAG,MAAM;IAC1BN,YAAY,CAACO,UAAb,CAAwB,YAAxB;IACAT,aAAa,CAAC,KAAD,CAAb;EACD,CAHD;;EAKA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,uBAEE,QAAC,WAAD,CAAa,QAAb;MACA,KAAK,EAAE;QACLD,UAAU,EAAEA;MADP,CADP;MAAA,wBAKA,QAAC,UAAD;QAAY,eAAe,EAAEA,UAA7B;QAAyC,QAAQ,EAAES;MAAnD;QAAA;QAAA;QAAA;MAAA,QALA,eAMA;QAAA,WACG,CAACT,UAAD,iBAAe,QAAC,KAAD;UAAO,OAAO,EAAEK;QAAhB;UAAA;UAAA;UAAA;QAAA,QADlB,EAEGL,UAAU,iBAAI,QAAC,IAAD;UAAM,QAAQ,EAAES;QAAhB;UAAA;UAAA;UAAA;QAAA,QAFjB;MAAA;QAAA;QAAA;QAAA;MAAA,QANA;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GA1CQV,G;;KAAAA,G;AA4CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}